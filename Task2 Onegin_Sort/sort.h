#ifndef SORT_H
#define SORT_H


/**
* @file sort.h
*
*@brief Заголовочный файл с объявленными функциями сортировки и их описанием
*
*@author Скорик Сергей, студент МФТИ, группа Б05-875, базовая кафедра -- ИСП
*
*@date 26/10/2020
*/


/**
 * Функция, которая передается в алгоритм qsort.
 * Сравнивает строки с начала по алфавиту.
 * Формат функции стандартный для использования в qsort.
 *
 * @param [in] a константный элемент(строка) массива
 * @param [in] b константный элемент(строка) массива
 *
 * @return a - b
 */
int sort_first(const void * a, const void * b);


/**
 * Функция, которая передается в алгоритм qsort.
 * Сравнивает строки с конца по алфавиту.
 * Формат функции стандартный для использования в qsort.
 *
 * @param [in] a константный элемент(строка) массива
 * @param [in] b константный элемент(строка) массива
 *
 * @return a - b
 */
int sort_second(const void * a, const void * b);


/**
 * Функция, преобразующая буквы к строчным
 *
 * @param [in] A символ алфавита(буква)
 *
 * @return a строчная буква алфавита.
 */
char Up_to_low_case(char A);


/**
 * Функция, проверяет символ на совпадение со знаком препинания
 *
 * @param [in] a проверяемый символ
 *
 * @return 1, если a -- знак препинания
 *         0, иначе
 */
int check_punc(char a);


#endif // SORT_H
